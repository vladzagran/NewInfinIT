// telegram-bot.js
class TelegramBot {
    constructor() {
        this.botToken = 'TOKEN';
        this.chatId = 'chat_id';
        this.apiUrl = `https://api.telegram.org/bot${this.botToken}/sendMessage`;
    }

    async sendMessage(formData) {
        try {
            const message = this.formatMessage(formData);

            const response = await fetch(this.apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: this.chatId,
                    text: message,
                    parse_mode: 'HTML'
                })
            });

            const result = await response.json();

            if (result.ok) {
                return { success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' };
            } else {
                throw new Error(result.description || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
            return {
                success: false,
                message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            };
        }
    }

    formatMessage(data) {
        return `
<b>üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</b>

<b>üë§ –ò–º—è:</b> ${data.name}
<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}
<b>üìß Email:</b> ${data.email}
<b>üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${data.message}

<b>‚è∞ –í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
        `.trim();
    }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const telegramBot = new TelegramBot();